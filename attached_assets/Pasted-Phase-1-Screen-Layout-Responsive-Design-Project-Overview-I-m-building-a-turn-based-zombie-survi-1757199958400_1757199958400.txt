Phase 1: Screen Layout & Responsive Design

Project Overview

I'm building a turn-based zombie survival game using React + JavaScript, deployed via Electron (Windows). This will be a multi-phase project with a tile-based map system and grid-based inventory management. The game title is Zombie Road.

Current Phase Goal

Create the main game screen layout with proper responsive design. No game logic yet - just the visual structure.

Screen Layout Requirements

Main Layout (50/50 split):

Left 50%: Map interface area

Right 50%: Inventory interface area

Inventory Subdivision:

Small equipment slots area at top

Left side: Backpack grid placeholder

Right side: Ground items grid placeholder

Control Strip:

60-80px height strip below map

End Turn button (prominent)

Basic stats display area (AP, Turn, HP placeholders)

Target Resolutions:

Must scale well: 1920x1080, 1366x768, 1440x900, 1600x900

Use modern CSS (Grid, Flexbox, custom properties)

Reserve maximum space for game interfaces, minimal UI overhead

Visual Layout

┌─────────────────────────────────────────────────┐
│              Game Window (100% width)            │
├─────────────────────┬───────────────────────────┤
│                     │    Inventory (50%)        │
│                     │ ┌─────────────────────────┤
│                     │ │   Equipment Slots       │
│                     │ ├─────────────┬───────────┤
│    Map Interface    │ │  Backpack   │  Ground   │
│        (50%)        │ │   Grid      │  Items    │
│     [Placeholder]   │ │ [Placeholder] [Placeholder]
│                     │ │             │           │
├─────────────────────┼─┴─────────────┴───────────┤
│  Controls & Stats   │                           │
│ [End Turn] [AP: 10] │                           │
└─────────────────────┴───────────────────────────┘


Required Files

Create these components with placeholder content:

src/
├── components/
│   ├── Game/
│   │   ├── GameScreen.js          # Main layout container
│   │   ├── MapInterface.js        # Map area placeholder  
│   │   ├── GameControls.js        # End Turn + stats
│   │   └── InventoryPanel.js      # Inventory container
│   └── Inventory/
│       ├── EquipmentSlots.js      # Equipment area
│       ├── BackpackGrid.js        # Backpack placeholder
│       └── GroundItemsGrid.js     # Ground items placeholder
├── hooks/
│   └── useWindowSize.js           # Responsive scaling
└── styles/
    └── GameScreen.css             # Layout styles


Technical Requirements

Responsive Design: Use rem, %, clamp() for fluid scaling

CSS Architecture: Modern techniques (Grid, Flexbox, custom properties)

Component Structure: Clean separation, ready for future phases

Performance: Efficient rendering at all target resolutions

Accessibility: Proper semantic HTML, adequate contrast

Deliverables

Complete file outputs for all listed components

Working demo showing responsive layout at different window sizes

Placeholder content that clearly shows each area's purpose

CSS that scales properly across all target resolutions

Clean component architecture ready for Phase 2 integration

Success Criteria

[ ] 50/50 split works at all target resolutions

[ ] Inventory subdivisions are clearly visible

[ ] Control strip is compact but readable

[ ] Components are properly structured for future phases

[ ] No horizontal/vertical scrollbars at target resolutions

[ ] Layout degrades gracefully at smaller sizes

Future Context (Don't Implement Yet)

This layout will eventually contain:

Interactive tile-based map with click-to-move

Grid-based inventory with multi-slot items (Resident Evil style)

Mouse-driven interface with context menus

Turn-based mechanics with AP system

Focus only on the responsive layout structure for now. Keep components simple with clear placeholder content that demonstrates the intended layout.

Questions?

Ask for clarification on any layout requirements or technical approach before starting implementation.